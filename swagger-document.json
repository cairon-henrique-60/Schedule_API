{
  "openapi": "3.0.0",
  "paths": {
    "/schedule/auth/login": {
      "post": {
        "operationId": "AuthController_signIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/schedule/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/schedule/user/paginate": {
      "get": {
        "operationId": "UserController_paginate",
        "parameters": [
          {
            "name": "user_name",
            "required": false,
            "in": "query",
            "description": "Name of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_email",
            "required": false,
            "in": "query",
            "description": "Email of the user.",
            "example": "levis@gmail.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone_number",
            "required": false,
            "in": "query",
            "description": "Phone number of the user.",
            "example": "997203320",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Date create of the user.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "description": "Date update of the user.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deletedAt",
            "required": false,
            "in": "query",
            "description": "Date delete of the user.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite data of the paginate user.",
            "example": 100,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Current page of the paginate user.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/user/{id}": {
      "get": {
        "operationId": "UserController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "UserController_updateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "UserController_deleteUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/user/findUserByEmail/{email}": {
      "get": {
        "operationId": "UserController_getByEmail",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/user": {
      "get": {
        "operationId": "UserController_list",
        "parameters": [
          {
            "name": "user_name",
            "required": false,
            "in": "query",
            "description": "Name of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_email",
            "required": false,
            "in": "query",
            "description": "Email of the user.",
            "example": "levis@gmail.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone_number",
            "required": false,
            "in": "query",
            "description": "Phone number of the user.",
            "example": "997203320",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Date create of the user.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "description": "Date update of the user.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deletedAt",
            "required": false,
            "in": "query",
            "description": "Date delete of the user.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite data of the paginate user.",
            "example": 100,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Current page of the paginate user.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "UserController_createUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/branchs/paginate": {
      "get": {
        "operationId": "BranchsController_paginate",
        "parameters": [
          {
            "name": "branch_name",
            "required": false,
            "in": "query",
            "description": "Name of the branch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cnpj",
            "required": false,
            "in": "query",
            "description": "CNPJ of the branch.",
            "example": "12345678000200",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "street",
            "required": false,
            "in": "query",
            "description": "Street of the branch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cep",
            "required": false,
            "in": "query",
            "description": "CEP of the branch.",
            "example": "36150000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "required": false,
            "in": "query",
            "description": "City of the branch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "district",
            "required": false,
            "in": "query",
            "description": "District of the branch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "local_number",
            "required": false,
            "in": "query",
            "description": "Number residence of the branch.",
            "example": "230B",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch_phone",
            "required": false,
            "in": "query",
            "description": "Number phone of the branch.",
            "example": "32227460",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "complements",
            "required": false,
            "in": "query",
            "description": "Information additional of the branch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "required": false,
            "in": "query",
            "description": "Owner of the branch.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Date create of the branch.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "description": "Date update of the branch.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deletedAt",
            "required": false,
            "in": "query",
            "description": "Date delete of the branch.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite data of the paginate branchs.",
            "example": 100,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Current page of the paginate branchs.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "branchs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/branchs/{id}": {
      "get": {
        "operationId": "BranchsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          }
        },
        "tags": [
          "branchs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "BranchsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          }
        },
        "tags": [
          "branchs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "BranchsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "branchs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/branchs": {
      "get": {
        "operationId": "BranchsController_findAll",
        "parameters": [
          {
            "name": "branch_name",
            "required": false,
            "in": "query",
            "description": "Name of the branch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cnpj",
            "required": false,
            "in": "query",
            "description": "CNPJ of the branch.",
            "example": "12345678000200",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "street",
            "required": false,
            "in": "query",
            "description": "Street of the branch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cep",
            "required": false,
            "in": "query",
            "description": "CEP of the branch.",
            "example": "36150000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "required": false,
            "in": "query",
            "description": "City of the branch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "district",
            "required": false,
            "in": "query",
            "description": "District of the branch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "local_number",
            "required": false,
            "in": "query",
            "description": "Number residence of the branch.",
            "example": "230B",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch_phone",
            "required": false,
            "in": "query",
            "description": "Number phone of the branch.",
            "example": "32227460",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "complements",
            "required": false,
            "in": "query",
            "description": "Information additional of the branch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "required": false,
            "in": "query",
            "description": "Owner of the branch.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Date create of the branch.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "description": "Date update of the branch.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deletedAt",
            "required": false,
            "in": "query",
            "description": "Date delete of the branch.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite data of the paginate branchs.",
            "example": 100,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Current page of the paginate branchs.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "branchs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "BranchsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          }
        },
        "tags": [
          "branchs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/services/paginate": {
      "get": {
        "operationId": "ServicesController_paginate",
        "parameters": [
          {
            "name": "service_name",
            "required": false,
            "in": "query",
            "description": "Name of the service.",
            "example": "Degradê",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_value",
            "required": false,
            "in": "query",
            "description": "Value of the service.",
            "example": 25,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "expected_time",
            "required": false,
            "in": "query",
            "description": "Time of the service.",
            "example": "25:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_active",
            "required": false,
            "in": "query",
            "description": "Is active of the service.",
            "example": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "user_id",
            "required": false,
            "in": "query",
            "description": "Affiliate user id (owner).",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Date create of the service.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "description": "Date update of the service.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deletedAt",
            "required": false,
            "in": "query",
            "description": "Date delete of the service.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite data of the paginate service.",
            "example": 100,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Current page of the paginate service.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/services": {
      "get": {
        "operationId": "ServicesController_findAll",
        "parameters": [
          {
            "name": "service_name",
            "required": false,
            "in": "query",
            "description": "Name of the service.",
            "example": "Degradê",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_value",
            "required": false,
            "in": "query",
            "description": "Value of the service.",
            "example": 25,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "expected_time",
            "required": false,
            "in": "query",
            "description": "Time of the service.",
            "example": "25:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_active",
            "required": false,
            "in": "query",
            "description": "Is active of the service.",
            "example": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "user_id",
            "required": false,
            "in": "query",
            "description": "Affiliate user id (owner).",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Date create of the service.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "description": "Date update of the service.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deletedAt",
            "required": false,
            "in": "query",
            "description": "Date delete of the service.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite data of the paginate service.",
            "example": 100,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Current page of the paginate service.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "ServicesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/services/{id}": {
      "get": {
        "operationId": "ServicesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ServicesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ServicesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/clients/paginate": {
      "get": {
        "operationId": "ClientsController_paginate",
        "parameters": [
          {
            "name": "client_name",
            "required": false,
            "in": "query",
            "description": "Name of the client.",
            "example": "John",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_name",
            "required": false,
            "in": "query",
            "description": "First name of the client.",
            "example": "Doe",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "birth_date",
            "required": false,
            "in": "query",
            "description": "Birth date of the client.",
            "example": "11/03/1994",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_active",
            "required": false,
            "in": "query",
            "description": "Is active of the client.",
            "example": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "branch_id",
            "required": false,
            "in": "query",
            "description": "Branch of the client.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Date create of the client.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "description": "Date update of the client.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deletedAt",
            "required": false,
            "in": "query",
            "description": "Date delete of the client.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite data of the paginate clients.",
            "example": 100,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Current page of the paginate clients.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "clients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/clients": {
      "get": {
        "operationId": "ClientsController_findAll",
        "parameters": [
          {
            "name": "client_name",
            "required": false,
            "in": "query",
            "description": "Name of the client.",
            "example": "John",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_name",
            "required": false,
            "in": "query",
            "description": "First name of the client.",
            "example": "Doe",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "birth_date",
            "required": false,
            "in": "query",
            "description": "Birth date of the client.",
            "example": "11/03/1994",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_active",
            "required": false,
            "in": "query",
            "description": "Is active of the client.",
            "example": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "branch_id",
            "required": false,
            "in": "query",
            "description": "Branch of the client.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Date create of the client.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt",
            "required": false,
            "in": "query",
            "description": "Date update of the client.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deletedAt",
            "required": false,
            "in": "query",
            "description": "Date delete of the client.",
            "example": "2024-01-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite data of the paginate clients.",
            "example": 100,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Current page of the paginate clients.",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "clients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "ClientsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        },
        "tags": [
          "clients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/schedule/clients/{id}": {
      "get": {
        "operationId": "ClientsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        },
        "tags": [
          "clients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ClientsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        },
        "tags": [
          "clients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ClientsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "clients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Schedule API example",
    "description": "The schedule API description",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [
    {
      "name": "auth",
      "description": ""
    },
    {
      "name": "user",
      "description": ""
    },
    {
      "name": "branchs",
      "description": ""
    },
    {
      "name": "services",
      "description": ""
    },
    {
      "name": "clients",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "AuthUserDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user.",
            "example": "levis@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "Password of the user.",
            "example": "909090"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          },
          "phone_number": {
            "type": "string",
            "nullable": true
          },
          "branchs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Branch"
            }
          },
          "id": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "user_name",
          "password",
          "user_email",
          "phone_number",
          "branchs",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "Client": {
        "type": "object",
        "properties": {
          "client_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "birth_date": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "branch_id": {
            "type": "number"
          },
          "branch": {
            "$ref": "#/components/schemas/Branch"
          },
          "id": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "client_name",
          "first_name",
          "birth_date",
          "is_active",
          "branch_id",
          "branch",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "Service": {
        "type": "object",
        "properties": {
          "service_name": {
            "type": "string"
          },
          "service_value": {
            "type": "number"
          },
          "expected_time": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "user_id": {
            "type": "number"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "branchs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Branch"
            }
          },
          "id": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "service_name",
          "service_value",
          "expected_time",
          "is_active",
          "user_id",
          "user",
          "branchs",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "Branch": {
        "type": "object",
        "properties": {
          "branch_name": {
            "type": "string"
          },
          "cnpj": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "cep": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "user_id": {
            "type": "number"
          },
          "district": {
            "type": "string"
          },
          "local_number": {
            "type": "string"
          },
          "branch_phone": {
            "type": "string"
          },
          "complements": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          },
          "id": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "branch_name",
          "cnpj",
          "street",
          "cep",
          "city",
          "user_id",
          "district",
          "local_number",
          "branch_phone",
          "complements",
          "user",
          "clients",
          "services",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "CreateUserDTO": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string",
            "description": "Name of the user."
          },
          "password": {
            "type": "string",
            "description": "Password of the user.",
            "example": "909090"
          },
          "user_email": {
            "type": "string",
            "description": "Email of the user.",
            "example": "levis@gmail.com"
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "description": "Phone number of the user.",
            "example": "997203320"
          }
        },
        "required": [
          "user_name",
          "password",
          "user_email"
        ]
      },
      "UpdateUserDTO": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string",
            "description": "New name of the user."
          },
          "user_email": {
            "type": "string",
            "description": "New email of the user",
            "example": "levis@gmail.com"
          },
          "current_password": {
            "type": "string",
            "description": "Current password of the user",
            "example": "909090"
          },
          "password": {
            "type": "string",
            "description": "New password of the user",
            "example": "90909012"
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "description": "New phone number of the user",
            "example": "997221050"
          }
        }
      },
      "CreateBranchDto": {
        "type": "object",
        "properties": {
          "branch_name": {
            "type": "string",
            "description": "Name of the branch."
          },
          "cnpj": {
            "type": "string",
            "description": "CNPJ of the branch.",
            "example": "12345678000200"
          },
          "street": {
            "type": "string",
            "description": "Street of the branch."
          },
          "cep": {
            "type": "string",
            "description": "CEP of the branch.",
            "example": "36150000"
          },
          "city": {
            "type": "string",
            "description": "City of the branch."
          },
          "district": {
            "type": "string",
            "description": "District of the branch."
          },
          "local_number": {
            "type": "string",
            "description": "Number residence of the branch.",
            "example": "230B"
          },
          "branch_phone": {
            "type": "string",
            "description": "Number phone of the branch.",
            "example": "32227460"
          },
          "complements": {
            "type": "string",
            "description": "Information additional of the branch."
          },
          "user_id": {
            "type": "number",
            "description": "Affiliate user id (owner).",
            "example": 1
          },
          "services": {
            "description": "Services of the branch.",
            "example": "[{id: 1}]",
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "branch_name",
          "cnpj",
          "street",
          "cep",
          "city",
          "district",
          "local_number",
          "user_id"
        ]
      },
      "UpdateBranchDto": {
        "type": "object",
        "properties": {
          "branch_name": {
            "type": "string",
            "description": "Name of the branch."
          },
          "cnpj": {
            "type": "string",
            "description": "CNPJ of the branch.",
            "example": "12345678000200"
          },
          "street": {
            "type": "string",
            "description": "Street of the branch."
          },
          "cep": {
            "type": "string",
            "description": "CEP of the branch.",
            "example": "36150000"
          },
          "city": {
            "type": "string",
            "description": "City of the branch."
          },
          "district": {
            "type": "string",
            "description": "District of the branch."
          },
          "local_number": {
            "type": "string",
            "description": "Number residence of the branch.",
            "example": "230B"
          },
          "branch_phone": {
            "type": "string",
            "description": "Number phone of the branch.",
            "example": "32227460"
          },
          "complements": {
            "type": "string",
            "description": "Information additional of the branch."
          },
          "user_id": {
            "type": "number",
            "description": "Affiliate user id (owner).",
            "example": 1
          },
          "services": {
            "description": "Services of the branch.",
            "example": "[{id: 1}]",
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "CreateServiceDto": {
        "type": "object",
        "properties": {
          "service_name": {
            "type": "string",
            "description": "Name of the service.",
            "example": "Degradê"
          },
          "service_value": {
            "type": "number",
            "description": "Value of the service.",
            "example": 25
          },
          "expected_time": {
            "type": "string",
            "description": "Time of the service.",
            "example": "25:00"
          },
          "is_active": {
            "type": "boolean",
            "description": "Is active of the service.",
            "example": true
          },
          "user_id": {
            "type": "number",
            "description": "Affiliate user id (owner).",
            "example": 1
          }
        },
        "required": [
          "service_name",
          "service_value",
          "expected_time",
          "is_active",
          "user_id"
        ]
      },
      "UpdateServiceDto": {
        "type": "object",
        "properties": {
          "service_name": {
            "type": "string",
            "description": "Name of the service.",
            "example": "Degradê"
          },
          "service_value": {
            "type": "number",
            "description": "Value of the service.",
            "example": 25
          },
          "expected_time": {
            "type": "string",
            "description": "Time of the service.",
            "example": "25:00"
          },
          "is_active": {
            "type": "boolean",
            "description": "Is active of the service.",
            "example": true
          },
          "user_id": {
            "type": "number",
            "description": "Affiliate user id (owner).",
            "example": 1
          }
        }
      },
      "CreateClientDto": {
        "type": "object",
        "properties": {
          "client_name": {
            "type": "string",
            "description": "Name of the client.",
            "example": "John"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the client.",
            "example": "Doe"
          },
          "birth_date": {
            "type": "string",
            "description": "Birth date of the client.",
            "example": "11/03/1994"
          },
          "is_active": {
            "type": "boolean",
            "description": "Is active of the client.",
            "example": true
          },
          "branch_id": {
            "type": "number",
            "description": "Branch of the client.",
            "example": 1
          }
        },
        "required": [
          "client_name",
          "first_name",
          "birth_date",
          "is_active",
          "branch_id"
        ]
      },
      "UpdateClientDto": {
        "type": "object",
        "properties": {
          "client_name": {
            "type": "string",
            "description": "Name of the client.",
            "example": "John"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the client.",
            "example": "Doe"
          },
          "birth_date": {
            "type": "string",
            "description": "Birth date of the client.",
            "example": "11/03/1994"
          },
          "is_active": {
            "type": "boolean",
            "description": "Is active of the client.",
            "example": true
          },
          "branch_id": {
            "type": "number",
            "description": "Branch of the client.",
            "example": 1
          }
        }
      }
    }
  }
}